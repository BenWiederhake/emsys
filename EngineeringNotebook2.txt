NOTE: We started a new engineering notebook because the old one became too long. The last entry in the old notebook is from 03.06.2016 09-18 "session".

scribe: Maximilian Schwenger 03.06.2016 12-14

Risk analysis:
- BW and MK divide communication to prepare conquering.
- Each communication channel is independent of the others, thus we work independently.
- Discussions about the difference between 3 and 4.
- MB and MS are sceptical about the outcome of the discussion.

Partition:
P = [{SOS, WAU},{T2T, LPP},{Pi/Camera, CBP},{internal HW-SW stuff in Tin Bot}]
Marlene.accept(P[0])
Ben.accept(P[3])
Max.accept(P[2])
Maxi.accept(P[1])

Now:
M\epsilon{K, S}: Documentation
BW + MB: Physically detecting bugs using Raid 6 with striping *Ben laughs out moderately loud in response*

TODO Ben: Traffic cop's eyes: Don't square minimal distance. (Don't try to makes sense off this sentence...)
    -> It does make sense!
    Old buggy formula for transition: current_distance >= min_distance^2
    Correct new formula (not pushed): current_distance >= min_distance
        -> It doesn't if you are unfamiliar with the concept of the traffic cop's eyes. ;)

$$$$$$$$$$$$$$
$ HAL:       $
$ $$$$       $
$            $
$ $$$$$$$$$$ $              $$
$ $ MatLab $ $               $$  $$$$$$
$ $$$$$$$$$$ $ $$$$$$$$$$$$$$$$$ $    $
$            $                   $ SW $
$ $$$$$$$$$$ $ $$$$$$$$$$$$$$$$$ $    $
$ $ E-Puck $ $  $$               $$$$$$
$ $$$$$$$$$$ $   $$
$            $
$$$$$$$$$$$$$$

You're welcome, Maxi.


==============================

Scribe: Ben Wiederhake, 8.6.2016, 10-12 session

Feedback zur Dokumentation:
- Env ist okay, aber "Components" ist was anderes:
  "Was sind Inputs, was sind Outputs, was passiert" sollte es sein
- Test-cases: zu wenig Korrelation mit Requirements
- "Falls es irgendwann noch mal eine Nachreichung gibt, einfach hochladen"
	=> Marlene und Maxi scheinen zu wissen, was damit gemeint ist
- Artikel verwenden ;)

Feedback zum Prototype:
- Sollte Verbindung testen
	-> Tut es aber!

Wahrscheinlichkeiten:
- Experimente sind nicht Zwang!
- Software sollte irgendwie Wahrscheinlichkeiten haben, "10 mal laufen lassen ist okay"

RHR alternative:
Breitenberg matrix

TODO:
- Adapt specification document, because we don't have ground sensors anymore!
- s/non physical/non-physical
- shortest known path to exit -> must have!

Anordnung vom fault tree:
- GraphViz!
- Latex-Paket ist buggy (sagt Hazem)
- Matlab-Modul ist buggy (sagt Hazem)

Aufbauen der Trees, top-down, und Aufteilen:
- escorting but no LED
- clear line of sight, no LED
- victim lost while escorting
- standing still
- incoorperative behavior (LPS)
- not using information about victim
- turning around forever
- spurious/unreasonable movements (LPS)
- run into walls
- moving to the "gathered position" instead "towards the victim"
- no power LED
- victim's LED is off
- victim cannot be found
- not moving the victim out; at least not on shortest path

Coorperation mode:
- locking via piratenpad
- working via git+graphviz

Failure mode Sackgasse:
- Es (kann) keine zweite Messung geben!
- sollte dem "Ray entlang fahren in Schlangenlinien"


==============================

scribe: Ben Wiederhake 10.06.2016 14-16 session

- writing on the fault trees
- discussion about coordination
- make sure to ask Hazem this time whether we're even remotely on
  the right track (prevent "Themaverfehlung")
- hard requirement on the victim's name:
  VICTOR CAPSLOCK  (... so he's the VICTIM VICTOR CAPSLOCK)
- new failure mode (ugh):
  When loading VICTOR while being next to a wall (and looking along
  it), we can't avoid smashing VICTOR into the wall.

Proposed specification amendments:
- victim needs to be >= 1cm away from the wall (so we don't accidentally
  pick VICTOR up while driving around on the other side)
- "wall" genauer spezifizieren:
      solvable maze (including table and walls; walls need to be of
      sufficient height to prevent signals radiating over the walls)
  zu:
      solvable maze (including table and walls; walls need to be of
      sufficient height *and thickness* to prevent signals radiating *through a wall*)


==============================

scribe: Ben Wiederhake 13.06.2016 16-18 session

- E-Puck ausprobieren
- documentation absolut fertig bekommen
- risk document rumwerkeln
- blob_detection.py optimieren und auf cython ans laufen bekommen
- Einer der E-Pucks sendet kein Bluetooth-Signal.  Könnte an der
  Batterie liegen (entladen), könnte aber auch kaputt sein.
  -> Wir laden die Batterie mal.
- "risk ananlysis" so weit bekommen, dass man es an Hazem senden kann
- E-Puck proximity Sensoren sind ziemlich beschissen.
  >5 cm: liefert den Wert 0
  ~3 cm: liefert den Wert ~30
  ~0 cm: liefert den Wert 8000
  Diese Werte ist völlig unbrauchbar
  Auf glatten Oberflächen scheint es besser zu gehen; aber der
  Wertebereich ist wirklich ungünstig.


==============================

scribe: Ben Wiederhake 15.06.2016 12-16 session

Feedback von Hazem:
- wir dürfen Sachen mit nach Hause nehmen (hurra!)
- "pick up victim through wall" genauer beschreiben
- Wir dürfen "das LPS" als zwei unabhängige Instanzen betrachten
	-> falsche Berechnung, aber deutlich einfacher

Done:
- Risk document base probabilities aufschreiben,
  und vorbereiten, es in unseren "Wald" einzubauen
- planen, wie wir das im Conrad kaufen
- im Conrad einkaufen gehen
- viele Probabilities in den Wald einbauen (noch nicht alle!)

Todo:
- ausprobieren, wie gut man RHR mit kleineren Thresholds basteln kann
  => Gut, dass wir die Herleitung der ganzen Magic Numbers aufgeschrieben haben
- Find out data retention rate for memory


==============================

scribe: Maximilian Köhl 16.06.2016 20:26 (recording progress regarding the hardware)

- E-Pucks Bluetooth module does not work without the "default extension board"
- built IR-Sensors: increased their precision by completely pasting over them with back isolation tape
- removed ground sensors and prepared E-Pucks for our custom extension board
  * need additional parts to mount the extension board on the E-Puck
- developed base idea for victim platform and built first prototype
  * use aluminum-foil to build a conductive frame out of magnets and iron globes
  * use magnets wrapped with aluminum-foil to detect contact to the platform
- determined pin assignment for the connection cable
  * green => GND
  * blue => +4V
  * white => SDA
  * black => SCL
- cut the raster boards into shape and begun soldering parts on them
- we need the following additional parts
  * Buchsen-, Stiftleisten
  * Green LEDs (3x), 100Ω Resistors (3x)
  * 100Ω Resistors (4x)
  * Victim Power Switch
  * IRLZ44n
  * some parts to hold the accumulator in place (victim)
- decided to use third E-Puck accumulator for the victim


==============================

scribe: Ben Wiederhake 17.06.2016 12-14 session

- "time-triggered", allerdings propagieren wir updates
	Eigene Messungen erst eintragen, wenn sie vom "master" zurückkommen.
- Alles in "ein" Struct werfen, und kein malloc/free
	(Ugh!  Aber ansonsten können wir nicht beweisen, dass der Speicher ausreicht)
- Maxi und Marlene gehen zum Conrad, Sachen kaufen (diesmal wirklich!)
- Ben und Max versuchen irgendwas zu programmieren
	=> LLVM als C++-to-C Converter verwenden?
	=> Allen ernstes: Ja, ansonsten
- Oder auch nicht:
	- das kann nur llvm <= 3.1 (wurde rausgeworfen nach 3.1 weil zu
	  kaputt)
	- Es scheint nur sonst noch "cfront" und "comeau" zu geben,
	  (letzteres evtl anders geschrieben), beide sehen ungut aus
	- Das github repository
	  (https://github.com/draperlaboratory/llvm-cbe) von einem Nutzer,
	  der das C-BackEnd wiederbeleben will sieht ziemlich tot aus.
- Btw, man muss installieren:
	- xc16: https://www.microchip.com/mplab/compilers
	- avr-gcc (use your favourite package manager)
- E-Puck hat einen Dreh-Schalter
	=> eigene Farbe nicht hardcoden, sondern per Drehschalten "eingeben"

MS: potential lib for A*: https://github.com/justinhj/astar-algorithm-cpp/
https://github.com/BigZaphod/AStar


==============================

scribe: Maximilian Köhl 19.06.2016 17:36 (recording progress)

- setup raspberry PI
- speed up color blob recognition by using NumPy
  * detection works most of the time
  * TODO: improve detection (compare with the original version?)
- with Marlene yesterday (18.06.2016)
  * built camera stand (+30€)
  * bought missing parts (+10€)
  * mount Raspberry PI on the stand
- wrote IR transmitter and detection software
- got I2C to work properly
  * problem with I2C and IR detection - for some reason the interrupt does not
    fire for a short period after stop signal on I2C occurred
- successfully test multiple bluetooth clients with raspberry as master
- E-Puck library is a pain in the a**, for example french comments claiming that
  some functions probably might not work (they actually do not, for whatever reason)

supplemental:
- I had a look at the receiver code of UART2 (bluetooth) — there is a 64 bytes buffer —
  if there is more information than the buffer can handle the last byte will be
  overwritten over and over again - we have to keep that in mind for protocol design

  possible alternatives (if we run intro any problems):

  * increase buffer size
  * implement our own interrupt for data reception and immediately handle, e.g.,
    map updates and all other important stuff
  * use C coroutines for long computations (e.g. A*) and some sort of scheduling


==============================

scribe: Ben Wiederhake 24.06.2016 13-14 session

- A* muss nicht yield()en, kann man auch per ISR machen
- controller.h/c wäre ganz cool
- Wir sollten RHR in Matlab testen
- irgendjemand: Was genau für Pakete wollen wir eigentlich senden?
